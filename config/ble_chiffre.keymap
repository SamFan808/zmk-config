/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * pants map
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NUM 	2
#define UTIL    3
#define NAV		4

/ {
	behaviors {
		
		bh: layer_taps 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <215>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods0 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <230>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };
        
        hm1: homerow_mods1 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <205>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        hm2: homerow_mods2 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods 2";
			#binding-cells = <2>;
			tapping_term_ms = <250>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };
   	 };
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_esc 
		{
			timeout-ms = <30>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};
		combo_tab 
		{
			timeout-ms = <35>;
			key-positions = <11 12>;
			bindings = <&kp TAB>;
		};
		combo_bspc 
		{
			timeout-ms = <40>;
			key-positions = <8 9>;
			bindings = <&kp BSPC>;
		};
		combo_ent
		{
			timeout-ms = <35>;
			key-positions = <18 19>;
			bindings = <&kp RET>;
		};
		combo_slsh
		{
			timeout-ms = <35>;
			key-positions = <28 29>
			bindings = <$kp FSLH>
		}
};

/ {
    keymap 
	{
    compatible = "zmk,keymap";

    default_layer {
            bindings = <
    &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P
    &hm1 LCTRL A &hm1 LALT S &kp D &kp F &kp G &kp H &kp J &kp K &hm1 RALT L &hm1 RCTRL SEMI
    &hm1 LSHIFT Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &hm1 RSHIFT FSLH
    &mo 4 &bh 2 SPACE &bh 1 SPACE &mo 3 
            >;
        };

    num_sym {
            bindings = <
    &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
    &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp EQUAL &kp MINUS
    &kp BSLH &kp SEMI &kp LBRC &kp LBKT &kp LPAR &kp RPAR &kp RBKT &kp RBRC &kp SQT &kp PIPE
    &kp LGUI &trans &trans &none
            >;
        };

    num {
            bindings = <
    &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
    &kp C_PLAY &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_NEXT &trans &kp MINUS &kp EQUAL &kp LBRC &kp RBRC
    &kp BSLH &kp SEMI &kp LBRC &kp LBKT &kp LPAR &kp RPAR &kp RBKT &kp RBRC &kp SQT &kp BSLH
    &kp LGUI &trans &trans &none
            >;
        };

    util {
            bindings = <
    &bt BT_SEL_CMD 0 &bt BT_SEL_CMD 1 &none &none &none &none &none &none &none &none
    &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none &kp C_PREV &kp C_PP &kp C_NEXT &none
    &none &none &none &none &none &none &none &none &none &none
    &bt BT_CLR &trans &none &none
            >;
        };

	nav {
            bindings = <
    &trans &trans &none &none &none &kp K_CALC &kp HOME &kp UP &kp END &kp PGUP
    &trans &trans &trans &trans &none &none &kp LEFT &kp DOWN &kp RIGHT &kp PGDN
    &none &none &none &none &none &none &none &none &none &none
    &trans &trans &none &none
            >;
        };
    };
};
